<?xml version="1.0" encoding="UTF-8"?>
<project name="autofabrik" default="compile" basedir=".">

	<property name="src.dir" value="src" />
	<property name="doc.dir" location="doc"/>
	<property name="build.dir" value="bin" />
	<property name="lib.dir" value="lib" />
	<property name="id" value="default" />
	<property name="delay" value="500" />		
	
	<path id="project.classpath">
			<pathelement location="${build.dir}" />
		<fileset dir="${lib.dir}">	
			<include name="*.jar"/>	
		</fileset>
	</path>
		<target name="checkos">
		<mkdir dir="recovery"/>
		<copy todir="${lib.dir}">
			<fileset dir="recovery" includes="*.jar">
			</fileset>
			</copy>
		<condition property="isWindows">
			<os family="windows" />
		</condition>

		<condition property="isLinux">
			<os family="unix" />
			
		</condition>
		<condition property="isMacOsButNotMacOsX">
			<and>
			<os family="mac"/>

			<not>
			<os family="unix"/>

				</not>
				</and>
			</condition>
			<delete dir="${lib.dir}2"/>
		<mkdir dir="${lib.dir}2"/>
		<mkdir dir="recovery"/>
		<copy todir="recovery">
			<fileset dir="${lib.dir}" includes="*.jar">
			</fileset>
			</copy>
		<mkdir dir="${lib.dir}2/mac"/>
		<mkdir dir="${lib.dir}2/windows"/>
		<mkdir dir="${lib.dir}2/linux"/>
		<copy todir="${lib.dir}2/mac">
			<fileset dir="${lib.dir}" includes="*macos*.jar">
			</fileset>
			</copy>
		<copy todir="${lib.dir}2/windows">
			<fileset dir="${lib.dir}" includes="*win*.jar">
			</fileset>
			</copy>
			<copy todir="${lib.dir}2/linux">
			<fileset dir="${lib.dir}" includes="*linux*.jar">
			</fileset>
			</copy>
			<delete dir="${lib.dir}"/>
			<mkdir dir="${lib.dir}"/>
	</target>

	<target name="if_windows" depends="checkos" if="isWindows">
		<property name="sw.root" value="c:\flag" />
		<echo message="${sw.root}"/>
		<echo message="${sun.arch.data.model}"/>
		<echo message="${os.name}"/>
		<copy todir="${lib.dir}">
			<fileset dir="${lib.dir}2/windows" includes="*${sun.arch.data.model}.jar">
			</fileset>
			</copy>
			
	</target>

	<target name="if_unix" depends="checkos" if="isLinux">
		<property name="sw.root" value="/opt/flag" />
		<echo message="${sw.root}"/>
		<copy todir="${lib.dir}">
			<fileset dir="${lib.dir}2/linux" includes="*${sun.arch.data.model}.jar">
			</fileset>
			</copy>
	</target>
	<target name="if_mac" depends="checkos" if="isMacOsButNotMacOsX">
		<property name="sw.root" value="/opt/flag" />
		<echo message="${sw.root}"/>
		<copy todir="${lib.dir}">
			<fileset dir="${lib.dir}2/mac" includes="*${sun.arch.data.model}.jar">
			</fileset>
			</copy>
	</target>

	
	<target name="compile" depends="checkos,if_windows,if_unix,if_mac" description="Compile project.">
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project.classpath" debug="true" deprecation="true" includeantruntime="false" />
	</target>

	<target name="start-server" depends="compile" description="Run server.">
		<java classname="Server.Server_Controller" fork="true" classpathref="project.classpath">
			<sysproperty value="java.policy" key="java.security.policy"></sysproperty>
		</java>
	</target>
	
	<target name="start-client" depends="compile" description="Run server.">
		<java classname="Client.Client_Controller" fork="true" classpathref="project.classpath">
			<sysproperty value="java.policy" key="java.security.policy"></sysproperty>
		</java>
	</target>

	<target name="run-assembly" depends="compile" description="Run assembly.">
		<java classname="fabrik.rmi.roboter.MontageRoboter" fork="true" classpathref="project.classpath">
			<arg value="${id}" />
			<arg value="${delay}" />
		</java>
	</target>
	<target name="recovery" description="lib recovery">
		<copy todir="${lib.dir}">
			<fileset dir="recovery" includes="*.jar">
			</fileset>
			</copy>
	</target>

	
	<!-- Generate javadocs for current project into ${doc.dir} -->
	<target name="create-doc" depends="compile" description="generate documentation">
		<javadoc sourcepath="${src.dir}" destdir="${doc.dir}" />
	</target>
	<target name="clean" description="Clean build products.">
		<delete dir="${build.dir}" />
	</target>
	
	 <target name="clean-doc" description="Clean build products.">
        <delete dir="${doc.dir}"/>
    </target>
	


	<target name="rebuild" depends="clean, compile" description="Clean and build products." />

</project>
